module(
    name = "bazel_skylib",
    # Keep in sync with version.bzl and @bazel_skylib_gazelle_plugin//:MODULE.bazel
    version = "1.7.1",
    compatibility_level = 1,
)

register_toolchains(
    "//toolchains/unittest:cmd_toolchain",
    "//toolchains/unittest:bash_toolchain",
)

bazel_dep(name = "platforms", version = "0.0.4")
bazel_dep(name = "rules_license", version = "0.0.7")

### INTERNAL ONLY - lines after this are not included in the release packaging.

# Build-only / test-only dependencies
bazel_dep(name = "stardoc", version = "0.6.2", dev_dependency = True, repo_name = "io_bazel_stardoc")
bazel_dep(name = "rules_pkg", version = "0.9.1", dev_dependency = True)
bazel_dep(name = "rules_testing", version = "0.6.0", dev_dependency = True)

# Needed for bazelci and for building distribution tarballs.
# If using an unreleased version of bazel_skylib via git_override, apply
# MODULE.bazel-remove-override.patch to remove the following lines:
bazel_dep(name = "bazel_skylib_gazelle_plugin", dev_dependency = True)
local_path_override(
    module_name = "bazel_skylib_gazelle_plugin",
    path = "gazelle",
)

external_directory_tests_ext = use_extension("//tests/directory:external_directory_tests.bzl", "external_directory_tests_ext", dev_dependency = True)
use_repo(external_directory_tests_ext, "external_directory_tests")

as_extension_test_ext = use_extension("//tests:modules_test.bzl", "as_extension_test_ext", dev_dependency = True)
use_repo(as_extension_test_ext, "bar", "foo")

use_all_repos_test_ext = use_extension("//tests:modules_test.bzl", "use_all_repos_test_ext", dev_dependency = True)
use_repo(use_all_repos_test_ext, "baz", "qux")

apparent_repo_name_test_ext = use_extension("//tests:extensions/apparent_repo_name.bzl", "apparent_repo_name_test_ext", dev_dependency = True)
use_repo(apparent_repo_name_test_ext, "apparent-repo-name-test")
